<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Falcon from hardware</title>
    <link>https://jklmf.github.io/</link>
    <description>Recent content on Falcon from hardware</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 13 Feb 2018 13:42:49 -0500</lastBuildDate>
    
	<atom:link href="https://jklmf.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Clock Switching</title>
      <link>https://jklmf.github.io/posts/clock_switching/</link>
      <pubDate>Sun, 17 May 2020 22:28:22 +0800</pubDate>
      
      <guid>https://jklmf.github.io/posts/clock_switching/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Unit Tests for Embedded</title>
      <link>https://jklmf.github.io/posts/unit_tests_for_embedded/</link>
      <pubDate>Wed, 08 Apr 2020 18:05:30 +0800</pubDate>
      
      <guid>https://jklmf.github.io/posts/unit_tests_for_embedded/</guid>
      <description>Been a while wondering if embedded program can be unit-tested&amp;hellip;
I was about to rewrite IR_Manager. It was actually a set of &amp;lsquo;driver&amp;rsquo; that to handle all IR transmit and receive among all the IR protocols or as raw as plain IR profiles.
The basic logic is: when the device on boot, the firmware picks and initialises the protocols the hardware is needed.
Transmission: When the clouds emit a transmit IR command to the hardware, it transmits the stream if it passed some restrictions, basically simple as that.</description>
    </item>
    
    <item>
      <title>Test Jig</title>
      <link>https://jklmf.github.io/posts/test_jig/</link>
      <pubDate>Sun, 17 Nov 2019 22:28:11 +0800</pubDate>
      
      <guid>https://jklmf.github.io/posts/test_jig/</guid>
      <description>In my long time ago freelance, the maximum number of PCBA in my production line (my room &amp;amp; myself), was twenty something. I can recall the struggles of troubleshooting&amp;hellip;
Lately, I am assigned to re-make the test-jig program for one of our product, because original source code is disappeared&amp;hellip; The only working test-jig is being use in the production line.
I managed to clone the raspberry pi and rebuild one test-jig in the office.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://jklmf.github.io/about/</link>
      <pubDate>Tue, 13 Feb 2018 13:42:49 -0500</pubDate>
      
      <guid>https://jklmf.github.io/about/</guid>
      <description>Hello, I&amp;rsquo;m Falcon.
This page uses the default baseof.html template.</description>
    </item>
    
    <item>
      <title>50Hz or 60Hz?</title>
      <link>https://jklmf.github.io/posts/50_60_hz/</link>
      <pubDate>Sat, 17 May 2014 22:28:11 +0800</pubDate>
      
      <guid>https://jklmf.github.io/posts/50_60_hz/</guid>
      <description>In my second job as a &amp;lsquo;software engineer&amp;rsquo;, my job was, mainly maintain and update existing firmwares.
I came across with a coffee machine that needs to be selling globally, rather than only some counties. My task was to update the part of the circuit and firmware that detects the AC main switching frequency.
Hardware A non-zero-crossing Triac and an optocoupler were chosen as the detection circuit. The MCU input pin is protected from high voltage by the optocoupler.</description>
    </item>
    
  </channel>
</rss>